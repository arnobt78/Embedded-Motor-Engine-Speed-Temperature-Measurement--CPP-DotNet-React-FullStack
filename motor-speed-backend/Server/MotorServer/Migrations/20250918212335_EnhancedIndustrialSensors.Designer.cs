// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MotorServer.Data;

#nullable disable

namespace MotorServer.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250918212335_EnhancedIndustrialSensors")]
    partial class EnhancedIndustrialSensors
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.7");

            modelBuilder.Entity("MotorServer.Models.MotorReading", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<double?>("AirPressure")
                        .HasColumnType("REAL");

                    b.Property<double?>("AmbientPressure")
                        .HasColumnType("REAL");

                    b.Property<double?>("AmbientTemperature")
                        .HasColumnType("REAL");

                    b.Property<double?>("BearingHealth")
                        .HasColumnType("REAL");

                    b.Property<double?>("CoolantFlowRate")
                        .HasColumnType("REAL");

                    b.Property<double?>("Current")
                        .HasColumnType("REAL");

                    b.Property<double?>("Displacement")
                        .HasColumnType("REAL");

                    b.Property<double?>("Efficiency")
                        .HasColumnType("REAL");

                    b.Property<double?>("FuelFlowRate")
                        .HasColumnType("REAL");

                    b.Property<double?>("Humidity")
                        .HasColumnType("REAL");

                    b.Property<double?>("HydraulicPressure")
                        .HasColumnType("REAL");

                    b.Property<string>("MachineId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("MaintenanceStatus")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("OilPressure")
                        .HasColumnType("REAL");

                    b.Property<double?>("OperatingHours")
                        .HasColumnType("REAL");

                    b.Property<double?>("PowerConsumption")
                        .HasColumnType("REAL");

                    b.Property<double?>("PowerFactor")
                        .HasColumnType("REAL");

                    b.Property<int?>("RPM")
                        .HasColumnType("INTEGER");

                    b.Property<double?>("ShaftPosition")
                        .HasColumnType("REAL");

                    b.Property<double?>("SoundLevel")
                        .HasColumnType("REAL");

                    b.Property<int>("Speed")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<double?>("StrainGauge1")
                        .HasColumnType("REAL");

                    b.Property<double?>("StrainGauge2")
                        .HasColumnType("REAL");

                    b.Property<double?>("StrainGauge3")
                        .HasColumnType("REAL");

                    b.Property<int?>("SystemHealth")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Temperature")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<double?>("Torque")
                        .HasColumnType("REAL");

                    b.Property<double?>("Vibration")
                        .HasColumnType("REAL");

                    b.Property<double?>("VibrationX")
                        .HasColumnType("REAL");

                    b.Property<double?>("VibrationY")
                        .HasColumnType("REAL");

                    b.Property<double?>("VibrationZ")
                        .HasColumnType("REAL");

                    b.Property<double?>("Voltage")
                        .HasColumnType("REAL");

                    b.HasKey("Id");

                    b.ToTable("MotorReadings");
                });
#pragma warning restore 612, 618
        }
    }
}
